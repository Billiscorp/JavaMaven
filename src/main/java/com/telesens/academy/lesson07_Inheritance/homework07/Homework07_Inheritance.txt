ДЗ_07_Наследование.txt

# Задачи на Объектно Ориентированное Программирование

=====================================================
Шилдт "Руководство для начинающих" 6 изд.
стр. 247-289
=====================================================


1) a) Создать класс Date, который имеет следующие поля:
		- день
		- месяц
		- год

		Все поля должны быть помечены модификатором private
		- реализовать конструкторы:
			по умолчанию public Date() // инициировать 1 января 1970
			который инициализирует все поля public Date(int day, int month, int year)
			конструктор копирования public Date(Date date)

		- реализовать возможность установки нового значения времени с помощью методов:
			set(int day, int month, int year);
			set(Date date);
			в первом случае проверять корректность полей: day, month, year

		- реализовать методы:
			int getDay();
			int getMonth();
			int getYear();
				которые возвращают день, месяц и год, соответственно

		-* реализовать методы:
			String getDayOfWeek();
				который возвращает день недели: пн, вт, ср и тд.
			int getWeekOfYear();
				которые вычисляет номер недели в году

		- реализовать методы:
			nextDay();
			nextMonth();
			nextYear();
			которые увеличивают на единицу значение дня, месяца и года соответственно

		-* реализовать метод addDays(int days);
			который добавляет кол-во дней 'days' к текущей дате

		-* реализовать метод checkData(int day, int month, int year), который проверяет существование введенной даты
		-* использовать проверку checkData в конструкторах при создании класса и при попытке изменить поле методом set,
		в случае ошибки не проводить изменение, а вывести сообщение на консоль
		-** реализовать метод differenceInDays(int day, int month, int year), который принимает другую дату и вычисляет в
			днях между датами

		- переопределить метод toString();
			который возвратит строковое представление даты: 25.01.2017
		- переопределить метод equals(Object obj) и hashCode() // использовать автогенерацию
		- реализовать метод printData();
			который выводит дату в форматированном виде, напр. 25.01.2017

	b) Реализовать класс DateTime, который наследуется от класса Date.
		В нем должны быть дополнительные поля
			- часы
			- минута
			- секунда

		Все поля должны быть помечены модификатором private
		- добавить конструкторы:
			по умолчанию
			со всеми параметрами
			копирования

		- реализовать доступ к полям через методы set и get
		- реализовать метод checkTime(int hour, int minute, int second), который проверяет существование введенного времени
		- использовать метод checkTime(...) при попытке изменть инициализировать класс с помощью конструктора, или при попытке
			модифицировать поля с помощью методов set
		- реализовать методы
			nextSecond();
			nextMinute();
			nextHour();
			которые увелечивают на единицу значение секунды, минуты и часа соответственно, при чем если кол-во часов достигается
			24, то должно увеличиться на единицу значение поля day из базового класса

		-* реализовать метод addSeconds(int seconds), который добавляет указанное кол-во секунд к текущей дате

		- переопределить метод toString();
			который возвращает строковое представление времени: 15:05:35
		- переопределить метод equals(Object obj) и hashCode() // использовать автогенерацию
		- реализовать метод printTime(), который отображает на консоле полное время в формате: 15:05:35
		- реализовать перегруженный метод printTime(boolean isTimeFormat12);
			который выводит время в 12 часовом формате, если isTimeFormat12 равно true:  3:05 p.m.
					выводит время в 24 часовом формате, если isTimeFormat12 равно false: 15:05

		- реализовать метод printDateTime();
			который отображает время и дату: 25.01.2017 15:05:35
		- реализовать перегруженный метод printDateTime(boolean isTimeFormat12);
			который отображает время и дату в зависимости от флага isTimeFormat12:
				25.01.2017 3:05 p.m.  // isTimeFormat12 is true
				25.01.2017 15:05  	  // isTimeFormat12 is false

	c) Реализовать класс ExtendedTime, который наследуется от класса Time
		у него есть дополнительное поле с модификатором private
			миллисекунды

		- добавить возможность задавать расширенное время с помощью конструкторов и метода set
		- переопределить метод toString();
		- добавить метод print(), который выводит время на консоль в формате: 15:05:35.357

3) Протестировать классы Date, Time и ExtendedTime:
		- все конструкторы
		- метод toString()
		- метод equals()
		- все методы next...()
		- checkData, checkTime

Практика.
	a) Реализовать абстрактный класс Component, который имеет следующие поля:
			- xPosition
			- yPorition
			- width
			- height
			- text // надпись кнопки

		Все поля должны быть помечены модификатором private
		- реализовать доступ к полям через методы set и get
		- переопределить метод toString()
		- реализовать метод print, который выводит информацию о кнопке в отформатированном виде
		- описать абстрактный метод draw(), который рисует кнопку на консоле и должен быть реализован в базовом классе:

	b) Реализовать 2 дочерних класса от Component:
		class Label
			- реализовать метод draw();

				| Label |

			- переопределить методы toString() и print();

		class Button
			- реализовать метод draw();
				**********
				* Button *
				**********
			- переопределить методы toString() и print();
			- добавить метод click(); // этот метод выполняет действие по нажатию на кнопку, напр. выводить сообщение на консоль

	с)	Реализовать	2 дочерних класса от Button

		class RoundButton
			- реализовать метод draw();
				 ********
				* Button *
				 ********
			- переопределить методы toString() и print();

		class CheckBox
			- добавить private поле checked // тип boolean, кот. означает нажата или нет
			- добавить метод boolean isChecked() // кот. возвращает значение нажата или нет
			- реализовать метод draw();
				кот. рисует нажатую кнопку так
					**************
					* Button |+| *
					**************
				и не нажатую
					**************
					* Button |-| *
					**************
			- переопределить методы toString() и print();
			- переопределить метод click(); // который при нажатии переводит статус кнопки в состояние нажата, при повторном нажатие в состояние не нажата (т. е. меняте поле isChecked)


	с) Протестировать работоспособность всех подклассов Button
	....